# DICTIONARIES

## 1. sum values

def sum_values(my_dictionary):
  return sum(my_dictionary.values())

print(sum_values({"milk":5, "eggs":2, "flour": 3})) # should print 10
print(sum_values({10:1, 100:2, 1000:3})) # should print 6

## 2. even keys

def sum_even_keys(my_dictionary):
  sum = 0
  for key in my_dictionary.keys():
    if key%2 == 0:
      sum += my_dictionary[key]
  return sum

print(sum_even_keys({1:5, 2:2, 3:3})) # should print 2
print(sum_even_keys({10:1, 100:2, 1000:3})) # should print 6

## 3. add ten

def add_ten(my_dictionary):
  for key, value in my_dictionary.items():
    value += 10
    my_dictionary[key] = value
  return my_dictionary

print(add_ten({1:5, 2:2, 3:3})) # should print {1:15, 2:12, 3:13}
print(add_ten({10:1, 100:2, 1000:3})) # should print {10:11, 100:12, 1000:13}

# Codecademy alternative
def add_ten(my_dictionary):
  for key in my_dictionary.keys():
    my_dictionary[key] += 10
  return my_dictionary

## 4. values that are keys

def values_that_are_keys(my_dictionary):
  new_list = []
  for value in my_dictionary.values():
    if value in my_dictionary.keys():
      new_list.append(value)
  return new_list

print(values_that_are_keys({1:100, 2:1, 3:4, 4:10})) # should print [1, 4]
print(values_that_are_keys({"a":"apple", "b":"a", "c":100})) # should print ["a"]

## 5. max key

def max_key(my_dictionary):
  largest_key = 0
  largest_value = float("-inf")
  for key, value in my_dictionary.items():
    if value > largest_value:
      largest_value = value
      largest_key = key
  return largest_key

print(max_key({1:100, 2:1, 3:4, 4:10})) # should print 1
print(max_key({"a":100, "b":10, "c":1000})) # should print "c"

# DICTIONARIES advanced

## 1. word length dictionary

def word_length_dictionary(words):
  new_dict = {}
  for word in words:
    new_dict[word] = len(word)
  return new_dict

print(word_length_dictionary(["apple", "dog", "cat"])) # should print {"apple":5, "dog": 3, "cat":3}
print(word_length_dictionary(["a", ""])) # should print {"a": 1, "": 0}

## 2. frequency dictionary 

def frequency_dictionary(words):
  element = {}
  for ele in words:
    if ele not in element:
      element[ele] = 0
    element[ele] += 1
  return element

print(frequency_dictionary(["apple", "apple", "cat", 1])) # should print {"apple":2, "cat":1, 1:1}
print(frequency_dictionary([0,0,0,0,0])) # should print {0:5}

## 3. unique values

def unique_values(my_dictionary):
  new_list = []
  for value in my_dictionary.values():
    if value not in new_list:
      new_list.append(value)
  return len(new_list)

print(unique_values({0:3, 1:1, 4:1, 5:3})) # should print 2
print(unique_values({0:3, 1:3, 4:3, 5:3})) # should print 1

## 4. count first letter 

def count_first_letter(names):
  last_name_key = {}
  for key, value in names.items():
    if key[0] not in last_name_key:
      last_name_key[key[0]] = 0
    last_name_key[key[0]] += len(value)
  return last_name_key

print(count_first_letter({"Stark": ["Ned", "Robb", "Sansa"], "Snow" : ["Jon"], "Lannister": ["Jaime", "Cersei", "Tywin"]})) # should print {"S": 4, "L": 3}
print(count_first_letter({"Stark": ["Ned", "Robb", "Sansa"], "Snow" : ["Jon"], "Sannister": ["Jaime", "Cersei", "Tywin"]})) # should print {"S": 7}
